{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Eliyah Sundstr\\xF6m\\\\Documents\\\\Projects\\\\JS\\\\WikiGuesser\\\\node_modules\\\\react-native-drawer\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport tween from \"./tweener\";\nvar deviceScreen = Dimensions.get('window');\nvar DOUBLE_TAP_INTERVAL = 500;\nvar TAP_DURATION = 250;\nvar propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles'];\n\nvar Drawer = function (_Component) {\n  _inherits(Drawer, _Component);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer() {\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._length = 0;\n    _this._prevLength = 0;\n    _this._offsetOpen = 0;\n    _this._offsetClosed = 0;\n    _this._open = false;\n    _this._panning = false;\n    _this._tweenPending = false;\n    _this._activeTween = null;\n    _this._lastPress = 0;\n    _this._panStartTime = 0;\n    _this._syncAfterUpdate = false;\n    _this._interactionHandle = null;\n    _this.state = {\n      viewport: deviceScreen\n    };\n\n    _this.getChildContext = function () {\n      return {\n        drawer: _assertThisInitialized(_this)\n      };\n    };\n\n    _this.initialize = function (props) {\n      var fullLength = _this.getDeviceLength();\n\n      _this._offsetClosed = _this.getClosedOffset(props, _this.state.viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, _this.state.viewport);\n      _this._prevLength = _this._length;\n      var styles = {\n        container: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }\n      };\n      styles.main = Object.assign({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.main);\n      styles.drawer = Object.assign({\n        position: 'absolute',\n        borderWidth: 0\n      }, _this.isLeftOrRightSide() ? {\n        top: 0\n      } : {\n        left: 0\n      }, _this.props.styles.drawer);\n\n      if (props.initializeOpen || props.open) {\n        _this._open = true;\n        _this._length = fullLength - _this._offsetOpen;\n        styles.main[_this.props.side] = 0;\n        styles.drawer[_this.props.side] = 0;\n        if (props.type === 'static') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n        if (props.type === 'displace') styles.main[_this.props.side] = fullLength - _this._offsetOpen;\n      } else {\n        _this._open = false;\n        _this._length = _this._offsetClosed;\n        styles.main[_this.props.side] = _this._offsetClosed;\n        if (props.type === 'static') styles.drawer[_this.props.side] = 0;\n        if (props.type === 'overlay') styles.drawer[_this.props.side] = _this._offsetClosed + _this._offsetOpen - fullLength;\n        if (props.type === 'displace') styles.drawer[_this.props.side] = -fullLength + _this._offsetClosed + _this._offsetOpen;\n      }\n\n      if (_this.main) {\n        _this.drawer.setNativeProps({\n          style: {\n            left: styles.drawer.left\n          }\n        });\n\n        _this.main.setNativeProps({\n          style: {\n            left: styles.main.left\n          }\n        });\n      } else {\n        _this.stylesheet = StyleSheet.create(styles);\n        _this.responder = PanResponder.create({\n          onStartShouldSetPanResponder: _this.onStartShouldSetPanResponder,\n          onStartShouldSetPanResponderCapture: _this.onStartShouldSetPanResponderCapture,\n          onMoveShouldSetPanResponder: _this.onMoveShouldSetPanResponder,\n          onMoveShouldSetPanResponderCapture: _this.onMoveShouldSetPanResponderCapture,\n          onPanResponderMove: _this.onPanResponderMove,\n          onPanResponderRelease: _this.onPanResponderRelease,\n          onPanResponderTerminate: _this.onPanResponderTerminate\n        });\n      }\n\n      _this.resync(null, props);\n    };\n\n    _this.updatePosition = function () {\n      var mainProps = {};\n      var drawerProps = {};\n\n      var ratio = (_this._length - _this._offsetClosed) / (_this.getOpenLength() - _this._offsetClosed);\n\n      switch (_this.props.type) {\n        case 'overlay':\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._offsetOpen + _this._length;\n          mainProps[_this.props.side] = _this._offsetClosed;\n          break;\n\n        case 'static':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = 0;\n          break;\n\n        case 'displace':\n          mainProps[_this.props.side] = _this._length;\n          drawerProps[_this.props.side] = -_this.getDeviceLength() + _this._length + _this._offsetOpen;\n          break;\n      }\n\n      var mainOverlayProps = null;\n      var drawerOverlayProps = null;\n\n      if (_this.props.tweenHandler) {\n        var propsFrag = _this.props.tweenHandler(ratio, _this.props.side);\n\n        mainProps = Object.assign(mainProps, propsFrag.main);\n        drawerProps = Object.assign(drawerProps, propsFrag.drawer);\n        mainOverlayProps = propsFrag.mainOverlay;\n        drawerOverlayProps = propsFrag.drawerOverlay;\n      }\n\n      if (_this.main && _this.drawer && _this.mainOverlay && _this.drawerOverlay) {\n        _this.drawer.setNativeProps({\n          style: drawerProps\n        });\n\n        _this.main.setNativeProps({\n          style: mainProps\n        });\n\n        if (mainOverlayProps) _this.mainOverlay.setNativeProps({\n          style: mainOverlayProps\n        });\n        if (drawerOverlayProps) _this.drawerOverlay.setNativeProps({\n          style: drawerOverlayProps\n        });\n      }\n    };\n\n    _this.onPanResponderTerminate = function (e, gestureState) {\n      _this._panning = false;\n      _this.shouldOpenDrawer(_this.getGestureDelta(gestureState)) ? _this.open() : _this.close();\n    };\n\n    _this.onStartShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onStartShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures()) return _this.processShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onMoveShouldSetPanResponderCapture = function (e, gestureState) {\n      if (_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onMoveShouldSetPanResponder = function (e, gestureState) {\n      if (!_this.shouldCaptureGestures() && _this.props.negotiatePan) return _this.processMoveShouldSet(e, gestureState);\n      return false;\n    };\n\n    _this.onPanResponderMove = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n\n      if (!_this.props.acceptPan) return false;\n      if (_this._open ^ delta < 0 ^ _this.isRightOrBottomSide()) return false;\n      delta = _this.isRightOrBottomSide() ? delta * -1 : delta;\n      var length = _this._prevLength + delta;\n      length = Math.min(length, _this.getOpenLength());\n      length = Math.max(length, _this.getClosedLength());\n      length = Math.round(length * 2) / 2;\n      _this._length = length;\n\n      _this.updatePosition();\n\n      if (!_this._panning) {\n        _this.props.onDragStart && _this.props.onDragStart();\n      }\n\n      _this._panning = true;\n    };\n\n    _this.onPanResponderRelease = function (e, gestureState) {\n      var delta = _this.getGestureDelta(gestureState);\n\n      _this._panning = false;\n      if (Date.now() - _this._panStartTime < TAP_DURATION) _this.processTapGestures();\n      if (Math.abs(delta) < 50 && _this._activeTween) return;\n      _this.shouldOpenDrawer(delta) ? _this.open() : _this.close();\n\n      _this.updatePosition();\n\n      _this._prevLength = _this._length;\n    };\n\n    _this.processShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n\n      if (!inMask) return false;\n      if (!_this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false;\n      _this._panStartTime = Date.now();\n      if (inMask && _this.shouldCaptureGestures()) return true;\n      if (_this.props.negotiatePan) return false;\n      if (!_this.props.acceptPan) return false;\n\n      _this.terminateActiveTween();\n\n      return true;\n    };\n\n    _this.processMoveShouldSet = function (e, gestureState) {\n      var inMask = _this.testPanResponderMask(e, gestureState);\n\n      if (!inMask && (!_this.props.acceptPanOnDrawer || _this._open === false)) return false;\n      if (!_this.props.acceptPan) return false;\n      if (!_this.props.negotiatePan || _this.props.disabled || !_this.props.acceptPan || _this._panning) return false;\n\n      var delta = _this.getGestureDelta(gestureState);\n\n      var deltaOppositeAxis = _this.getGestureDeltaOppositeAxis(gestureState);\n\n      var swipeToLeftOrTop = delta < 0 ? true : false;\n      var swipeToRightOrBottom = delta > 0 ? true : false;\n      var swipeOppositeAxis = Math.abs(deltaOppositeAxis) >= Math.abs(delta) ? true : false;\n      var swipeInCloseDirection = _this.isLeftOrTopSide() ? swipeToLeftOrTop : swipeToRightOrBottom;\n\n      if (swipeOppositeAxis || _this._open && !swipeInCloseDirection || !_this._open && swipeInCloseDirection) {\n        return false;\n      }\n\n      _this.terminateActiveTween();\n\n      return true;\n    };\n\n    _this.processTapGestures = function () {\n      if (_this._activeTween) return false;\n\n      if (_this.props.acceptTap || _this.props.tapToClose && _this._open) {\n        _this._open ? _this.close() : _this.open();\n        return true;\n      }\n\n      if (_this.props.acceptDoubleTap) {\n        var now = new Date().getTime();\n        var timeDelta = now - _this._lastPress;\n        _this._lastPress = now;\n\n        if (timeDelta < DOUBLE_TAP_INTERVAL) {\n          _this._open ? _this.close() : _this.open();\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this.testPanResponderMask = function (e, gestureState) {\n      if (_this.props.disabled) return false;\n      if (_this.context.drawer && _this.context.drawer._open) return false;\n      if (_this._childDrawer && _this._childDrawer._open) return false;\n      var pos0 = _this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY;\n      var deltaOpen = _this.isLeftOrTopSide() ? _this.getDeviceLength() - pos0 : pos0;\n      var deltaClose = _this.isLeftOrTopSide() ? pos0 : _this.getDeviceLength() - pos0;\n      if (_this._open && deltaOpen > _this.getOpenMask()) return false;\n      if (!_this._open && deltaClose > _this.getClosedMask()) return false;\n      return true;\n    };\n\n    _this.terminateActiveTween = function () {\n      if (_this._activeTween) {\n        _this._activeTween.terminate();\n\n        _this._activeTween = null;\n      }\n    };\n\n    _this.open = function (type, cb) {\n      var start = _this._length;\n\n      var end = _this.getOpenLength();\n\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === true) return;\n      _this.props.onOpenStart && _this.props.onOpenStart();\n\n      _this.setInteractionHandle();\n\n      _this._activeTween = tween({\n        start: _this._length,\n        end: _this.getOpenLength(),\n        duration: _this.props.tweenDuration,\n        easingType: _this.props.tweenEasing,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = true;\n          _this._prevLength = _this._length;\n\n          _this.adjustForCaptureGestures();\n\n          _this.props.onOpen();\n\n          _this.clearInteractionHandle();\n\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n\n    _this.close = function (type, cb) {\n      var start = _this._length;\n\n      var end = _this.getClosedLength();\n\n      if (_this._activeTween) return;\n      if (type !== 'force' && start - end === 0 && _this._open === false) return;\n      _this.props.onCloseStart && _this.props.onCloseStart();\n\n      _this.setInteractionHandle();\n\n      _this._activeTween = tween({\n        start: start,\n        end: end,\n        easingType: _this.props.tweenEasing,\n        duration: _this.props.tweenDuration,\n        onFrame: function onFrame(tweenValue) {\n          _this._length = Math.round(tweenValue * 2) / 2;\n\n          _this.updatePosition();\n        },\n        onEnd: function onEnd() {\n          _this._activeTween = null;\n          _this._open = false;\n          _this._prevLength = _this._length;\n\n          _this.adjustForCaptureGestures();\n\n          _this.props.onClose();\n\n          _this.clearInteractionHandle();\n\n          if (typeof type === 'function') {\n            type();\n          } else cb && cb();\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      _this._open ? _this.close() : _this.open();\n    };\n\n    _this.handleSetViewport = function (e) {\n      var viewport = e.nativeEvent.layout;\n      var oldViewport = _this.state.viewport;\n      if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return;\n      var didRotationChange = viewport.width !== oldViewport.width;\n\n      _this.resync(viewport, null, didRotationChange);\n    };\n\n    _this.resync = function (viewport, props, didRotationChange) {\n      if (didRotationChange) _this._syncAfterUpdate = true;\n      viewport = viewport || _this.state.viewport;\n      props = props || _this.props;\n      _this._offsetClosed = _this.getClosedOffset(props, viewport);\n      _this._offsetOpen = _this.getOpenOffset(props, viewport);\n\n      _this.setState({\n        viewport: viewport\n      });\n    };\n\n    _this.requiresResync = function (nextProps) {\n      for (var i = 0; i < propsWhomRequireUpdate.length; i++) {\n        var key = propsWhomRequireUpdate[i];\n        if (_this.props[key] !== nextProps[key]) return true;\n      }\n    };\n\n    _this.getDeviceLength = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width : viewport.height;\n    };\n\n    _this.getOpenLength = function () {\n      return _this.getDeviceLength() - _this._offsetOpen;\n    };\n\n    _this.getClosedLength = function () {\n      return _this._offsetClosed;\n    };\n\n    _this.getMainWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetClosed : viewport.width;\n    };\n\n    _this.getMainHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetClosed : viewport.height;\n    };\n\n    _this.getDrawerWidth = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isLeftOrRightSide() ? viewport.width - _this._offsetOpen : viewport.width;\n    };\n\n    _this.getDrawerHeight = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      return _this.isTopOrBottomSide() ? viewport.height - _this._offsetOpen : viewport.height;\n    };\n\n    _this.getOpenMask = function () {\n      var viewport = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.viewport;\n      if (_this.props.panCloseMask && _this.props.panCloseMask % 1 === 0) return _this.props.panCloseMask;\n      if (_this.props.panCloseMask) return _this.getDeviceLength(viewport) * _this.props.panCloseMask;\n      return Math.max(0.05, _this._offsetOpen);\n    };\n\n    _this.getClosedMask = function () {\n      if (_this.props.panOpenMask && _this.props.panOpenMask % 1 === 0) return _this.props.panOpenMask;\n      if (_this.props.panOpenMask) return _this.getDeviceLength() * _this.props.panOpenMask;\n      return Math.max(0.05, _this._offsetClosed);\n    };\n\n    _this.getOpenOffset = function (props, viewport) {\n      if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport);\n      return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * _this.getDeviceLength(viewport);\n    };\n\n    _this.getClosedOffset = function (props, viewport) {\n      if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport);\n      return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * _this.getDeviceLength(viewport);\n    };\n\n    _this.getGestureDelta = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n    };\n\n    _this.getGestureDeltaOppositeAxis = function (gestureState) {\n      return _this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n    };\n\n    _this.isLeftOrRightSide = function () {\n      if (I18nManager.isRTL) {\n        return [\"right\", \"left\"].includes(_this.props.side);\n      } else {\n        return [\"left\", \"right\"].includes(_this.props.side);\n      }\n    };\n\n    _this.isTopOrBottomSide = function () {\n      return [\"top\", \"bottom\"].includes(_this.props.side);\n    };\n\n    _this.isLeftOrTopSide = function () {\n      var side = \"left\";\n\n      if (I18nManager.isRTL) {\n        side = \"right\";\n      }\n\n      return [side, \"top\"].includes(_this.props.side);\n    };\n\n    _this.isRightOrBottomSide = function () {\n      var side = \"right\";\n\n      if (I18nManager.isRTL) {\n        side = \"left\";\n      }\n\n      return [side, \"bottom\"].includes(_this.props.side);\n    };\n\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"_registerChildDrawer\",\n    value: function _registerChildDrawer(drawer) {\n      this._childDrawer = drawer;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.context.drawer) this.context.drawer._registerChildDrawer(this);\n      if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.');\n      if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.');\n      if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.');\n      this.initialize(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.requiresResync(nextProps)) this.resync(null, nextProps);\n\n      if (nextProps.open !== null && this._open !== nextProps.open) {\n        this._syncAfterUpdate = true;\n        this._open = nextProps.open;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this._syncAfterUpdate) {\n        this._syncAfterUpdate = false;\n        this._open ? this.open('force') : this.close('force');\n      }\n    }\n  }, {\n    key: \"shouldOpenDrawer\",\n    value: function shouldOpenDrawer(delta) {\n      var hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide();\n      if (!hasActiveHeading) return this._open;else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold;\n    }\n  }, {\n    key: \"shouldCaptureGestures\",\n    value: function shouldCaptureGestures() {\n      if (this.props.captureGestures === true) return true;\n      if (this.props.captureGestures === 'closed' && this._open === false) return true;\n      if (this.props.captureGestures === 'open' && this._open === true) return true;\n      return false;\n    }\n  }, {\n    key: \"adjustForCaptureGestures\",\n    value: function adjustForCaptureGestures() {\n      if (!this.props.captureGestures) return;\n      var shouldCapture = this.shouldCaptureGestures();\n\n      if (this.mainOverlay && this.drawerOverlay) {\n        this.mainOverlay.setNativeProps({\n          pointerEvents: shouldCapture && this._open ? 'auto' : 'none'\n        });\n        this.drawerOverlay.setNativeProps({\n          pointerEvents: shouldCapture && !this._open ? 'auto' : 'none'\n        });\n      }\n    }\n  }, {\n    key: \"setInteractionHandle\",\n    value: function setInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n      if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  }, {\n    key: \"clearInteractionHandle\",\n    value: function clearInteractionHandle() {\n      if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer();\n      var second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain();\n      return React.createElement(View, {\n        key: \"drawerContainer\",\n        onLayout: this.handleSetViewport,\n        style: this.stylesheet.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 7\n        }\n      }, first, second);\n    }\n  }, {\n    key: \"renderMain\",\n    value: function renderMain() {\n      var _this2 = this;\n\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"main\",\n        ref: function ref(c) {\n          return _this2.main = c;\n        },\n        style: [this.stylesheet.main, {\n          height: this.getMainHeight(),\n          width: this.getMainWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 7\n        }\n      }), this.props.children, React.createElement(View, {\n        pointerEvents: this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this2.mainOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.mainOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderDrawer\",\n    value: function renderDrawer() {\n      var _this3 = this;\n\n      return React.createElement(View, _extends({}, this.responder.panHandlers, {\n        key: \"drawer\",\n        ref: function ref(c) {\n          return _this3.drawer = c;\n        },\n        elevation: this.props.elevation,\n        style: [this.stylesheet.drawer, {\n          height: this.getDrawerHeight(),\n          width: this.getDrawerWidth()\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 7\n        }\n      }), this.props.content, React.createElement(View, {\n        pointerEvents: !this._open && this.shouldCaptureGestures() ? 'auto' : 'none',\n        ref: function ref(c) {\n          return _this3.drawerOverlay = c;\n        },\n        style: [styles.overlay, this.props.styles && this.props.styles.drawerOverlay],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Drawer;\n}(Component);\n\nDrawer.tweenPresets = {\n  parallax: function parallax(ratio) {\n    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'left';\n\n    var drawer = _defineProperty({}, side, -150 * (1 - ratio));\n\n    return {\n      drawer: drawer\n    };\n  }\n};\nDrawer.propTypes = {\n  acceptDoubleTap: PropTypes.bool,\n  acceptPan: PropTypes.bool,\n  acceptTap: PropTypes.bool,\n  acceptPanOnDrawer: PropTypes.bool,\n  captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n  children: PropTypes.node,\n  closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  content: PropTypes.node,\n  disabled: PropTypes.bool,\n  elevation: PropTypes.number,\n  initializeOpen: PropTypes.bool,\n  open: PropTypes.bool,\n  negotiatePan: PropTypes.bool,\n  onClose: PropTypes.func,\n  onCloseStart: PropTypes.func,\n  onOpen: PropTypes.func,\n  onOpenStart: PropTypes.func,\n  onDragStart: PropTypes.func,\n  openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  panThreshold: PropTypes.number,\n  panCloseMask: PropTypes.number,\n  panOpenMask: PropTypes.number,\n  side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  styles: PropTypes.object,\n  tapToClose: PropTypes.bool,\n  tweenDuration: PropTypes.number,\n  tweenEasing: PropTypes.string,\n  tweenHandler: PropTypes.func,\n  type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n  useInteractionManager: PropTypes.bool,\n  panStartCompensation: PropTypes.bool,\n  openDrawerThreshold: PropTypes.any\n};\nDrawer.defaultProps = {\n  open: null,\n  initializeOpen: false,\n  type: 'displace',\n  closedDrawerOffset: 0,\n  openDrawerOffset: 0,\n  panThreshold: 0.25,\n  panOpenMask: null,\n  panCloseMask: null,\n  tweenHandler: null,\n  tweenDuration: 250,\n  tweenEasing: 'linear',\n  disabled: false,\n  negotiatePan: false,\n  captureGestures: 'open',\n  acceptDoubleTap: false,\n  acceptTap: false,\n  acceptPan: true,\n  acceptPanOnDrawer: true,\n  tapToClose: false,\n  styles: {},\n  elevation: 0,\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  side: 'left',\n  useInteractionManager: false\n};\nDrawer.contextTypes = {\n  drawer: PropTypes.object\n};\nDrawer.childContextTypes = {\n  drawer: PropTypes.object\n};\nexport { Drawer as default };\nvar styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/Users/Eliyah Sundström/Documents/Projects/JS/WikiGuesser/node_modules/react-native-drawer/index.js"],"names":["React","Component","PropTypes","tween","deviceScreen","Dimensions","get","DOUBLE_TAP_INTERVAL","TAP_DURATION","propsWhomRequireUpdate","Drawer","_length","_prevLength","_offsetOpen","_offsetClosed","_open","_panning","_tweenPending","_activeTween","_lastPress","_panStartTime","_syncAfterUpdate","_interactionHandle","state","viewport","getChildContext","drawer","initialize","props","fullLength","getDeviceLength","getClosedOffset","getOpenOffset","styles","container","flex","justifyContent","alignItems","main","Object","assign","position","borderWidth","isLeftOrRightSide","top","left","initializeOpen","open","side","type","setNativeProps","style","stylesheet","StyleSheet","create","responder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","resync","updatePosition","mainProps","drawerProps","ratio","getOpenLength","mainOverlayProps","drawerOverlayProps","tweenHandler","propsFrag","mainOverlay","drawerOverlay","e","gestureState","shouldOpenDrawer","getGestureDelta","close","shouldCaptureGestures","processShouldSet","negotiatePan","processMoveShouldSet","delta","acceptPan","isRightOrBottomSide","length","Math","min","max","getClosedLength","round","onDragStart","Date","now","processTapGestures","abs","inMask","testPanResponderMask","dy","dx","terminateActiveTween","acceptPanOnDrawer","disabled","deltaOppositeAxis","getGestureDeltaOppositeAxis","swipeToLeftOrTop","swipeToRightOrBottom","swipeOppositeAxis","swipeInCloseDirection","isLeftOrTopSide","acceptTap","tapToClose","acceptDoubleTap","getTime","timeDelta","context","_childDrawer","pos0","nativeEvent","pageX","pageY","deltaOpen","deltaClose","getOpenMask","getClosedMask","terminate","cb","start","end","onOpenStart","setInteractionHandle","duration","tweenDuration","easingType","tweenEasing","onFrame","tweenValue","onEnd","adjustForCaptureGestures","onOpen","clearInteractionHandle","onCloseStart","onClose","toggle","handleSetViewport","layout","oldViewport","width","height","didRotationChange","setState","requiresResync","nextProps","i","key","getMainWidth","getMainHeight","isTopOrBottomSide","getDrawerWidth","getDrawerHeight","panCloseMask","panOpenMask","openDrawerOffset","closedDrawerOffset","I18nManager","isRTL","includes","_registerChildDrawer","openDrawerThreshold","process","env","NODE_ENV","console","error","panStartCompensation","relativeDrag","hasActiveHeading","panThreshold","captureGestures","shouldCapture","pointerEvents","InteractionManager","useInteractionManager","createInteractionHandle","first","renderMain","renderDrawer","second","panHandlers","c","children","overlay","elevation","content","tweenPresets","parallax","propTypes","bool","oneOf","node","oneOfType","number","func","object","string","any","defaultProps","contextTypes","childContextTypes","right","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { PanResponder, View, StyleSheet, Dimensions, InteractionManager, I18nManager } from 'react-native'\n\nimport tween from './tweener'\n\nlet deviceScreen = Dimensions.get('window')\nconst DOUBLE_TAP_INTERVAL = 500\nconst TAP_DURATION = 250\nconst propsWhomRequireUpdate = ['closedDrawerOffset', 'openDrawerOffset', 'type', 'styles']\n\nexport default class Drawer extends Component {\n\n  _length = 0;\n  _prevLength = 0;\n  _offsetOpen = 0;\n  _offsetClosed = 0;\n  _open = false;\n  _panning = false;\n  _tweenPending = false;\n  _activeTween = null;\n  _lastPress = 0;\n  _panStartTime = 0;\n  _syncAfterUpdate = false;\n  _interactionHandle = null;\n\n  static tweenPresets = {\n    parallax: (ratio, side = 'left') => {\n      let drawer = { [side] : -150 * (1 - ratio)}\n      return { drawer }\n    }\n  };\n\n  state = {\n    viewport: deviceScreen\n  };\n\n  static propTypes = {\n    acceptDoubleTap: PropTypes.bool,\n    acceptPan: PropTypes.bool,\n    acceptTap: PropTypes.bool,\n    acceptPanOnDrawer: PropTypes.bool,\n    captureGestures: PropTypes.oneOf([true, false, 'open', 'closed']),\n    children: PropTypes.node,\n    closedDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    content: PropTypes.node,\n    disabled: PropTypes.bool,\n    elevation: PropTypes.number,\n    initializeOpen: PropTypes.bool,\n    open: PropTypes.bool,\n    negotiatePan: PropTypes.bool,\n    onClose: PropTypes.func,\n    onCloseStart: PropTypes.func,\n    onOpen: PropTypes.func,\n    onOpenStart: PropTypes.func,\n    onDragStart: PropTypes.func,\n    openDrawerOffset: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    panThreshold: PropTypes.number,\n    panCloseMask: PropTypes.number,\n    panOpenMask: PropTypes.number,\n    side: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n    styles: PropTypes.object,\n    tapToClose: PropTypes.bool,\n    tweenDuration: PropTypes.number,\n    tweenEasing: PropTypes.string,\n    tweenHandler: PropTypes.func,\n    type: PropTypes.oneOf(['overlay', 'static', 'displace']),\n    useInteractionManager: PropTypes.bool,\n\n    // deprecated\n    panStartCompensation: PropTypes.bool,\n    openDrawerThreshold: PropTypes.any,\n  };\n\n  static defaultProps = {\n    open: null,\n    initializeOpen: false,\n\n    type: 'displace',\n    closedDrawerOffset: 0,\n    openDrawerOffset: 0,\n    panThreshold: 0.25, // @TODO consider rename to panThreshold\n    panOpenMask: null, // defaults to closedDrawerOffset\n    panCloseMask: null, // defaults to openDrawerOffset\n\n    tweenHandler: null,\n    tweenDuration: 250,\n    tweenEasing: 'linear',\n\n    disabled: false,\n    negotiatePan: false,\n    captureGestures: 'open',\n    acceptDoubleTap: false,\n    acceptTap: false,\n    acceptPan: true,\n    acceptPanOnDrawer: true,\n    tapToClose: false,\n\n    styles: {},\n    elevation: 0,\n    onOpen: () => {},\n    onClose: () => {},\n    side: 'left',\n\n    useInteractionManager: false,\n  };\n\n  /*** CONTEXT ***/\n  static contextTypes = { drawer: PropTypes.object };\n  static childContextTypes = { drawer: PropTypes.object };\n  getChildContext = () => ({ drawer: this });\n  /*** END CONTEXT ***/\n\n  _registerChildDrawer(drawer) {\n    // Store child drawer for gesture disambiguation with multi drawer\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    this._childDrawer = drawer\n  }\n\n  componentWillMount() {\n    if (this.context.drawer) this.context.drawer._registerChildDrawer(this)\n    if (this.props.openDrawerThreshold && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: openDrawerThreshold is obsolete. Use panThreshold instead.')\n    if (this.props.panStartCompensation && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: panStartCompensation is deprecated.')\n    if (this.props.relativeDrag && process.env.NODE_ENV !== 'production') console.error('react-native-drawer: relativeDrag is deprecated.')\n    this.initialize(this.props)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.requiresResync(nextProps)) this.resync(null, nextProps)\n\n    if (nextProps.open !== null && this._open !== nextProps.open) {\n      this._syncAfterUpdate = true\n      this._open = nextProps.open\n    }\n  }\n\n  componentDidUpdate() {\n    if (this._syncAfterUpdate) {\n      this._syncAfterUpdate = false\n      this._open ? this.open('force') : this.close('force')\n    }\n  }\n\n  initialize = (props) => {\n    let fullLength = this.getDeviceLength();\n    this._offsetClosed = this.getClosedOffset(props, this.state.viewport)\n    this._offsetOpen = this.getOpenOffset(props, this.state.viewport)\n    // add function options\n    this._prevLength = this._length\n\n    let styles = {\n      container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n    }\n\n    styles.main = Object.assign({\n      position: 'absolute',\n      borderWidth: 0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.main)\n\n    styles.drawer = Object.assign({\n      position: 'absolute',\n      borderWidth:0,\n    }, this.isLeftOrRightSide() ? {top: 0} : {left: 0}, this.props.styles.drawer)\n\n    if (props.initializeOpen || props.open) { // open\n      this._open = true\n      this._length = fullLength - this._offsetOpen\n      styles.main[this.props.side] = 0\n      styles.drawer[this.props.side] = 0\n      if (props.type === 'static') styles.main[this.props.side] = fullLength - this._offsetOpen\n      if (props.type === 'displace') styles.main[this.props.side] = fullLength - this._offsetOpen\n    } else { // closed\n      this._open = false\n      this._length = this._offsetClosed\n      styles.main[this.props.side] = this._offsetClosed\n      if (props.type === 'static') styles.drawer[this.props.side] = 0\n      if (props.type === 'overlay') styles.drawer[this.props.side] = this._offsetClosed + this._offsetOpen - fullLength\n      if (props.type === 'displace') styles.drawer[this.props.side] = - fullLength + this._offsetClosed + this._offsetOpen\n    }\n\n    if (this.main) {\n      this.drawer.setNativeProps({ style: {left: styles.drawer.left}})\n      this.main.setNativeProps({ style: {left: styles.main.left}})\n    } else {\n      this.stylesheet = StyleSheet.create(styles)\n      this.responder = PanResponder.create({\n        onStartShouldSetPanResponder: this.onStartShouldSetPanResponder,\n        onStartShouldSetPanResponderCapture: this.onStartShouldSetPanResponderCapture,\n        onMoveShouldSetPanResponder: this.onMoveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: this.onMoveShouldSetPanResponderCapture,\n        onPanResponderMove: this.onPanResponderMove,\n        onPanResponderRelease: this.onPanResponderRelease,\n\tonPanResponderTerminate: this.onPanResponderTerminate\n      })\n    }\n\n    this.resync(null, props)\n  };\n\n  updatePosition = () => {\n    let mainProps = {}\n    let drawerProps = {}\n    let ratio = (this._length - this._offsetClosed) / (this.getOpenLength() - this._offsetClosed)\n\n    switch (this.props.type) {\n      case 'overlay':\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._offsetOpen + this._length\n        mainProps[this.props.side] = this._offsetClosed\n        break\n      case 'static':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = 0\n        break\n      case 'displace':\n        mainProps[this.props.side] = this._length\n        drawerProps[this.props.side] = -this.getDeviceLength() + this._length + this._offsetOpen\n        break\n    }\n\n    let mainOverlayProps = null\n    let drawerOverlayProps = null\n    if (this.props.tweenHandler) {\n      let propsFrag = this.props.tweenHandler(ratio, this.props.side)\n      mainProps = Object.assign(mainProps, propsFrag.main)\n      drawerProps = Object.assign(drawerProps, propsFrag.drawer)\n      mainOverlayProps = propsFrag.mainOverlay\n      drawerOverlayProps = propsFrag.drawerOverlay\n    }\n    if (this.main && this.drawer && this.mainOverlay && this.drawerOverlay) {\n      this.drawer.setNativeProps({style: drawerProps})\n      this.main.setNativeProps({style: mainProps})\n      if (mainOverlayProps) this.mainOverlay.setNativeProps({style: mainOverlayProps})\n      if (drawerOverlayProps) this.drawerOverlay.setNativeProps({style: drawerOverlayProps})\n    }\n  };\n\n  shouldOpenDrawer(delta) {\n    let hasActiveHeading = this._open ^ delta > 0 ^ this.isRightOrBottomSide()\n    if (!hasActiveHeading) return this._open\n    else return this._open ^ Math.abs(delta) > this.getDeviceLength() * this.props.panThreshold\n  }\n\n  onPanResponderTerminate = (e, gestureState) => {\n    this._panning = false\n    this.shouldOpenDrawer(this.getGestureDelta(gestureState)) ? this.open() : this.close()\n  };\n\n  onStartShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onStartShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures()) return this.processShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponderCapture = (e, gestureState) => {\n    if (this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onMoveShouldSetPanResponder = (e, gestureState) => {\n    if (!this.shouldCaptureGestures() && this.props.negotiatePan) return this.processMoveShouldSet(e, gestureState)\n    return false\n  };\n\n  onPanResponderMove = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    if (!this.props.acceptPan) return false\n\n    //Do nothing if we are panning the wrong way\n    if (this._open ^ delta < 0 ^ this.isRightOrBottomSide()) return false\n\n    delta = this.isRightOrBottomSide() ? delta * -1 : delta\n    let length = this._prevLength + delta\n    length = Math.min(length, this.getOpenLength())\n    length = Math.max(length, this.getClosedLength())\n    length = Math.round(length*2)/2\n    this._length = length\n\n    this.updatePosition()\n    if (!this._panning) {\n      this.props.onDragStart && this.props.onDragStart();\n    }\n    this._panning = true\n  };\n\n  onPanResponderRelease = (e, gestureState) => {\n    let delta = this.getGestureDelta(gestureState);\n    this._panning = false\n    if (Date.now() - this._panStartTime < TAP_DURATION) this.processTapGestures()\n    if (Math.abs(delta) < 50 && this._activeTween) return\n\n    this.shouldOpenDrawer(delta) ? this.open() : this.close()\n    this.updatePosition()\n    this._prevLength = this._length\n  };\n\n  processShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask) return false\n    // skip gesture process if we have mostly vertical swipe\n    if (!this._open && Math.abs(gestureState.dy) >= Math.abs(gestureState.dx)) return false\n    this._panStartTime = Date.now()\n    if (inMask && this.shouldCaptureGestures()) return true\n    if (this.props.negotiatePan) return false\n    if (!this.props.acceptPan) return false\n    this.terminateActiveTween()\n    return true\n  };\n\n  processMoveShouldSet = (e, gestureState) => {\n    let inMask = this.testPanResponderMask(e, gestureState)\n    if (!inMask && (!this.props.acceptPanOnDrawer || this._open === false )) return false\n    if (!this.props.acceptPan) return false\n\n    if (!this.props.negotiatePan || this.props.disabled || !this.props.acceptPan || this._panning) return false\n    let delta = this.getGestureDelta(gestureState)\n    let deltaOppositeAxis = this.getGestureDeltaOppositeAxis(gestureState)\n    let swipeToLeftOrTop = (delta < 0) ? true : false\n    let swipeToRightOrBottom = (delta > 0) ? true : false\n    let swipeOppositeAxis = (Math.abs(deltaOppositeAxis) >= Math.abs(delta)) ? true : false\n    let swipeInCloseDirection = (this.isLeftOrTopSide()) ? swipeToLeftOrTop : swipeToRightOrBottom\n    if (swipeOppositeAxis || (this._open && !swipeInCloseDirection) || (!this._open && swipeInCloseDirection)) {\n      return false\n    }\n\n    this.terminateActiveTween()\n    return true\n  };\n\n  processTapGestures = () => {\n    if (this._activeTween) return false // disable tap gestures during tween\n    if (this.props.acceptTap || (this.props.tapToClose && this._open)) {\n      this._open ? this.close() : this.open()\n      return true\n    }\n    if (this.props.acceptDoubleTap) {\n      let now = new Date().getTime()\n      let timeDelta = now - this._lastPress\n      this._lastPress = now\n      if (timeDelta < DOUBLE_TAP_INTERVAL) {\n        this._open ? this.close() : this.open()\n        return true\n      }\n    }\n    return false\n  };\n\n  shouldCaptureGestures() {\n    if (this.props.captureGestures === true) return true\n    if (this.props.captureGestures === 'closed' && this._open === false) return true\n    if (this.props.captureGestures === 'open' && this._open === true) return true\n    return false\n  }\n\n  testPanResponderMask = (e, gestureState) => {\n    if (this.props.disabled) return false\n\n    // Disable if parent or child drawer exist and are open\n    // @TODO make cleaner, generalize to work with 3+ drawers, prop to disable/configure\n    if (this.context.drawer && this.context.drawer._open) return false\n    if (this._childDrawer && this._childDrawer._open) return false\n\n    let pos0 = this.isLeftOrRightSide() ? e.nativeEvent.pageX : e.nativeEvent.pageY\n    let deltaOpen = this.isLeftOrTopSide() ? this.getDeviceLength() - pos0 : pos0\n    let deltaClose = this.isLeftOrTopSide() ? pos0 : this.getDeviceLength() - pos0\n\n    if ( this._open && deltaOpen > this.getOpenMask() ) return false\n    if ( !this._open && deltaClose > this.getClosedMask() ) return false\n    return true\n  };\n\n  terminateActiveTween = () => {\n    if (this._activeTween) {\n      this._activeTween.terminate()\n      this._activeTween = null\n    }\n  };\n\n  open = (type, cb) => {\n    let start = this._length\n    let end = this.getOpenLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === true) return // do nothing if the delta is 0\n\n    this.props.onOpenStart && this.props.onOpenStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start: this._length,\n      end: this.getOpenLength(),\n      duration: this.props.tweenDuration,\n      easingType: this.props.tweenEasing,\n      onFrame: (tweenValue) => {\n\tthis._length = Math.round(tweenValue*2)/2;\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = true\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onOpen()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  close = (type, cb) => {\n    let start = this._length\n    let end = this.getClosedLength()\n\n    if (this._activeTween) return\n    if (type !== 'force' && start - end === 0 && this._open === false) return // do nothing if the delta is 0\n\n    this.props.onCloseStart && this.props.onCloseStart()\n    this.setInteractionHandle()\n    this._activeTween = tween({\n      start,\n      end,\n      easingType: this.props.tweenEasing,\n      duration: this.props.tweenDuration,\n      onFrame: (tweenValue) => {\n\tthis._length = Math.round(tweenValue*2)/2;\n        this.updatePosition()\n      },\n      onEnd: () => {\n        this._activeTween = null\n        this._open = false\n        this._prevLength = this._length\n        this.adjustForCaptureGestures()\n        this.props.onClose()\n        this.clearInteractionHandle()\n\n        if(typeof type === 'function') {\n          type() // this is actually a callback\n        } else cb && cb()\n\n      }\n    })\n  };\n\n  adjustForCaptureGestures() {\n    if (!this.props.captureGestures) return\n    let shouldCapture = this.shouldCaptureGestures()\n    if (this.mainOverlay && this.drawerOverlay) {\n      this.mainOverlay.setNativeProps({ pointerEvents: shouldCapture && this._open ? 'auto' : 'none' })\n      this.drawerOverlay.setNativeProps({ pointerEvents: shouldCapture && !this._open ? 'auto' : 'none' })\n    }\n  }\n\n  setInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n    if (this.props.useInteractionManager) this._interactionHandle = InteractionManager.createInteractionHandle()\n  }\n\n  clearInteractionHandle() {\n    if (this._interactionHandle) InteractionManager.clearInteractionHandle(this._interactionHandle)\n  }\n\n  toggle = () => {\n    this._open ? this.close() : this.open()\n  };\n\n  handleSetViewport = (e) => {\n    let viewport = e.nativeEvent.layout\n    let oldViewport = this.state.viewport\n    if (viewport.width === oldViewport.width && viewport.height === oldViewport.height) return\n    let didRotationChange = viewport.width !== oldViewport.width\n    this.resync(viewport, null, didRotationChange)\n  };\n\n  resync = (viewport, props, didRotationChange) => {\n    if (didRotationChange) this._syncAfterUpdate = true\n    viewport = viewport || this.state.viewport\n    props = props || this.props\n    this._offsetClosed = this.getClosedOffset(props, viewport)\n    this._offsetOpen = this.getOpenOffset(props, viewport)\n    this.setState({ viewport })\n  };\n\n  requiresResync = (nextProps) => {\n    for (let i = 0; i < propsWhomRequireUpdate.length; i++) {\n      let key = propsWhomRequireUpdate[i]\n      if (this.props[key] !== nextProps[key]) return true\n    }\n  };\n\n  /*** DYNAMIC GETTERS ***/\n  getDeviceLength = (viewport = this.state.viewport) => this.isLeftOrRightSide() ? viewport.width : viewport.height;\n  getOpenLength = () => this.getDeviceLength() - this._offsetOpen;\n  getClosedLength = () => this._offsetClosed;\n  getMainWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetClosed : viewport.width;\n  };\n  getMainHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetClosed : viewport.height;\n  };\n  getDrawerWidth = (viewport = this.state.viewport) => {\n    return this.isLeftOrRightSide() ? viewport.width - this._offsetOpen : viewport.width;\n  };\n  getDrawerHeight = (viewport = this.state.viewport) => {\n    return this.isTopOrBottomSide() ? viewport.height - this._offsetOpen : viewport.height;\n  };\n  getOpenMask = (viewport = this.state.viewport) => {\n    if (this.props.panCloseMask && this.props.panCloseMask % 1 === 0) return this.props.panCloseMask\n    if (this.props.panCloseMask) return this.getDeviceLength(viewport) * this.props.panCloseMask\n    return Math.max(0.05, this._offsetOpen)\n  };\n  getClosedMask = () => {\n    if (this.props.panOpenMask && this.props.panOpenMask % 1 === 0) return this.props.panOpenMask\n    if (this.props.panOpenMask) return this.getDeviceLength() * this.props.panOpenMask\n    return Math.max(0.05, this._offsetClosed)\n  };\n  getOpenOffset = (props, viewport) => {\n    if (typeof props.openDrawerOffset === 'function') return props.openDrawerOffset(viewport)\n    return props.openDrawerOffset > 1 || props.openDrawerOffset < 0 ? props.openDrawerOffset : props.openDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getClosedOffset = (props, viewport) => {\n    if (typeof props.closedDrawerOffset === 'function') return props.closedDrawerOffset(viewport)\n    return props.closedDrawerOffset > 1 || props.closedDrawerOffset < 0 ? props.closedDrawerOffset : props.closedDrawerOffset * this.getDeviceLength(viewport)\n  };\n  getGestureDelta = (gestureState) => this.isLeftOrRightSide() ? gestureState.dx : gestureState.dy;\n  getGestureDeltaOppositeAxis = (gestureState) => this.isLeftOrRightSide() ? gestureState.dy : gestureState.dx;\n  /*** END DYNAMIC GETTERS ***/\n\n  isLeftOrRightSide = () => {\n    if (I18nManager.isRTL) {\n      return [\"right\", \"left\"].includes(this.props.side)\n    } else {\n      return [\"left\", \"right\"].includes(this.props.side)\n    }\n  }\n  isTopOrBottomSide = () => [\"top\", \"bottom\"].includes(this.props.side);\n  isLeftOrTopSide = () => {\n    let side = \"left\";\n    if (I18nManager.isRTL) {\n      side = \"right\";\n    }\n    return [side, \"top\"].includes(this.props.side);\n  }\n  isRightOrBottomSide = () => {\n    let side = \"right\"\n    if (I18nManager.isRTL) {\n      side = \"left\"\n    }\n    return [side, \"bottom\"].includes(this.props.side);\n  }\n\n  render() {\n    let first = this.props.type === 'overlay' ? this.renderMain() : this.renderDrawer()\n    let second = this.props.type === 'overlay' ? this.renderDrawer() : this.renderMain()\n\n    return (\n      <View\n        key=\"drawerContainer\"\n        onLayout={this.handleSetViewport}\n        style={this.stylesheet.container}\n        >\n        {first}\n        {second}\n      </View>\n    )\n  }\n\n  renderMain() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"main\"\n        ref={c => this.main = c}\n        style={[this.stylesheet.main, {height: this.getMainHeight(), width: this.getMainWidth()}]}\n        >\n        {this.props.children}\n        <View\n          pointerEvents={ this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.mainOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.mainOverlay]}\n          />\n      </View>\n    )\n  }\n\n  renderDrawer() {\n    return (\n      <View\n        {...this.responder.panHandlers}\n        key=\"drawer\"\n        ref={c => this.drawer = c}\n        elevation={this.props.elevation}\n        style={[this.stylesheet.drawer, {height: this.getDrawerHeight(), width: this.getDrawerWidth()}]}\n        >\n        {this.props.content}\n        <View\n          pointerEvents={ !this._open && this.shouldCaptureGestures() ? 'auto' : 'none' }\n          ref={c => this.drawerOverlay = c}\n          style={[styles.overlay, this.props.styles && this.props.styles.drawerOverlay]}\n          />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}